{"version":3,"sources":["components/card/card.component.jsx","components/card-list/card-list.component.jsx","components/search-box/search-box.component.jsx","App.js","reportWebVitals.js","index.js"],"names":["Card","props","className","alt","src","crypto","image","symbol","toUpperCase","name","current_price","high_24h","low_24h","CardList","cryptos","map","id","SearchBox","placeholder","handlechange","type","onChange","App","e","setState","searchField","target","value","state","fetch","then","response","json","users","this","filteredMonsters","filter","toLowerCase","includes","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"6TAEaA,G,MAAO,SAACC,GAAD,OAClB,sBAAKC,UAAU,iBAAf,UACE,qBAAKC,IAAI,SAASC,IAAKH,EAAMI,OAAOC,QACpC,+BAAKL,EAAMI,OAAOE,OAAOC,cAAzB,KAA0CP,EAAMI,OAAOI,KAAvD,OACA,4CAAeR,EAAMI,OAAOK,cAA5B,UACA,gDAAmBT,EAAMI,OAAOM,SAAhC,UACA,+CAAkBV,EAAMI,OAAOO,QAA/B,eCLSC,G,MAAW,SAACZ,GAAD,OACtB,qBAAKC,UAAU,YAAf,SACGD,EAAMa,QAAQC,KAAI,SAACV,GAAD,OACjB,cAAC,EAAD,CAAsBA,OAASA,GAApBA,EAAOW,WCHXC,G,MAAY,SAAC,GAAD,IAAEC,EAAF,EAAEA,YAAYC,EAAd,EAAcA,aAAd,OACrB,uBACAjB,UAAU,SACVkB,KAAK,SACLF,YAAaA,EACbG,SAAUF,MC2BCG,G,wDA9Bb,aAAe,IAAD,8BACZ,gBAWFH,aAAe,SAACI,GACd,EAAKC,SAAS,CAAEC,YAAaF,EAAEG,OAAOC,SAXtC,EAAKC,MAAQ,CACXd,QAAS,GACTW,YAAa,IAJH,E,gEAOO,IAAD,OAClBI,MAAM,4HACHC,MAAK,SAACC,GAAD,OAAcA,EAASC,UAC5BF,MAAK,SAACG,GAAD,OAAW,EAAKT,SAAS,CAAEV,QAASmB,S,+BAKpC,IAAD,EAC0BC,KAAKN,MAA9Bd,EADD,EACCA,QAASW,EADV,EACUA,YACXU,EAAmBrB,EAAQsB,QAAO,SAAC/B,GAAD,OACtCA,EAAOI,KAAK4B,cAAcC,SAASb,EAAYY,kBAEjD,OACE,sBAAKnC,UAAU,MAAf,UACA,iDACE,cAAC,EAAD,CAAWgB,YAAY,mBAAmBC,aAAce,KAAKf,eAC7D,cAAC,EAAD,CAAUL,QAASqB,W,GAzBTI,cCQHC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBZ,MAAK,YAAkD,IAA/Ca,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.b8a3bc80.chunk.js","sourcesContent":["import React from \"react\";\r\nimport \"./card.styles.css\";\r\nexport const Card = (props) => (\r\n  <div className=\"card-container\">\r\n    <img alt=\"crypto\" src={props.crypto.image} />\r\n    <h2>{props.crypto.symbol.toUpperCase()} ({props.crypto.name})</h2>\r\n    <h3>Current: ${props.crypto.current_price} USD</h3>\r\n    <h4>24h Highest: ${props.crypto.high_24h} USD</h4>\r\n    <h4>24h Lowest: ${props.crypto.low_24h} USD</h4>\r\n  </div>\r\n); \r\n","import React from \"react\";\r\nimport { Card } from \"../card/card.component\";\r\nimport \"./card-list.styles.css\";\r\nexport const CardList = (props) => (\r\n  <div className=\"card-list\">\r\n    {props.cryptos.map((crypto) => (\r\n      <Card key={crypto.id} crypto= {crypto}/>\r\n    ))}\r\n  </div>\r\n);\r\n","import React from \"react\";\r\nimport \"./search-box.styles.css\";\r\n\r\nexport const SearchBox = ({placeholder,handlechange}) => (\r\n    <input\r\n    className=\"search\"\r\n    type=\"search\"\r\n    placeholder={placeholder}\r\n    onChange={handlechange}\r\n    />\r\n);\r\n","import React, { Component } from \"react\";\nimport { CardList } from \"./components/card-list/card-list.component.jsx\";\nimport { SearchBox } from \"./components/search-box/search-box.component.jsx\";\nimport \"./App.css\";\nclass App extends Component {\n  constructor() {\n    super();\n    this.state = {\n      cryptos: [],\n      searchField: \"\",\n    };\n  }\n  componentDidMount() {\n    fetch(\"https://api.coingecko.com/api/v3/coins/markets?vs_currency=usd&order=market_cap_desc&per_page=100&page=1&sparkline=false\")\n      .then((response) => response.json())\n      .then((users) => this.setState({ cryptos: users }));\n  }\n  handlechange = (e) => {\n    this.setState({ searchField: e.target.value });\n  };\n  render() {\n    const { cryptos, searchField } = this.state;\n    const filteredMonsters = cryptos.filter((crypto) =>\n      crypto.name.toLowerCase().includes(searchField.toLowerCase())\n    );\n    return (\n      <div className=\"App\">\n      <h1>Cryptocurrency </h1>\n        <SearchBox placeholder=\"Search Your Coin\" handlechange={this.handlechange} />\n        <CardList cryptos={filteredMonsters} />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}